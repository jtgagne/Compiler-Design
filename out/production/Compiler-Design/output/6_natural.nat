Path: /Users/farrerz/Compiler-Design/src/test/6_natural.nat
Evaluating: 6_natural.nat


Lexer line 1: int a is 10
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	New environment instantiated.
	Token: WORD: Lexeme is 'a' and tag is 286
	Identifier: a	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 10 and tag is 268

Lexer line 2: int b is 4
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) a = (int) 10
	Token: WORD: Lexeme is 'b' and tag is 286
	Identifier: b	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 4 and tag is 268

Lexer line 3: boolean e is false
	Token: TYPE: Lexeme is boolean tag is 295 Width is 1
	Assign: (int) b = (int) 4
	Token: WORD: Lexeme is 'e' and tag is 286
	Identifier: e	 TYPE: boolean
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'false' and tag is 265

Lexer line 4: int q := 7
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (boolean) e = (boolean) false
	Token: WORD: Lexeme is 'q' and tag is 286
	Identifier: q	 TYPE: int
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: NUM: value is 7 and tag is 268

Lexer line 5: if(a not equal to b){
	Token: WORD: Lexeme is 'if' and tag is 263
	Assign: (int) q = (int) 7
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is ē
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 6:     a is b + 1
	Token: WORD: Lexeme is 'a' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: TOKEN: tag is +
	Token: NUM: value is 1 and tag is 268

Lexer line 7: }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) TOKEN: tag is +

Lexer line 8: a is 4
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 4 and tag is 268

Lexer line 9: b is 6
	Token: WORD: Lexeme is 'b' and tag is 286
	Assign: (int) a = (int) 4
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 6 and tag is 268

Lexer line 10: if(a less than or equal to b){
	Token: WORD: Lexeme is 'if' and tag is 263
	Assign: (int) b = (int) 6
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is đ
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 11:     a is b + 1
	Token: WORD: Lexeme is 'a' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: TOKEN: tag is +
	Token: NUM: value is 1 and tag is 268

Lexer line 12: }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) TOKEN: tag is +

Lexer line 13: #
	Token: WORD: Lexeme is 'a' and tag is 286

Lexer line 14: a is 3
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 3 and tag is 268

Lexer line 15: q is 5
	Token: WORD: Lexeme is 'q' and tag is 286
	Assign: (int) a = (int) 3
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 5 and tag is 268

Lexer line 16: if(a < q){
	Token: WORD: Lexeme is 'if' and tag is 263
	Assign: (int) q = (int) 5
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is Ē
	Token: WORD: Lexeme is 'q' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 17:     a is 6
	Token: WORD: Lexeme is 'a' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 6 and tag is 268

Lexer line 18: }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) 6

Lexer line 19: a is 1
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 1 and tag is 268

Lexer line 20: e := false
	Token: WORD: Lexeme is 'e' and tag is 286
	Assign: (int) a = (int) 1
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: WORD: Lexeme is 'false' and tag is 265

Lexer line 21: q := 3
	Token: WORD: Lexeme is 'q' and tag is 286
	Assign: (boolean) e = (boolean) false
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: NUM: value is 3 and tag is 268

Lexer line 22: b := -a
	Token: WORD: Lexeme is 'b' and tag is 286
	Assign: (int) q = (int) 3
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: WORD: Lexeme is 'minus' and tag is 289
	Token: WORD: Lexeme is 'a' and tag is 286

Lexer line 23: while(true){
	Token: WORD: Lexeme is 'while' and tag is 264
	Assign: (int) b = (int) minus
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'true' and tag is 266
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 24:     boolean d
	Token: TYPE: Lexeme is boolean tag is 295 Width is 1
	New environment instantiated.
	Token: WORD: Lexeme is 'd' and tag is 286
	Identifier: d	 TYPE: boolean

Lexer line 25:     d is true
	Token: WORD: Lexeme is 'd' and tag is 286
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'true' and tag is 266

Lexer line 26:     while(d){
	Token: WORD: Lexeme is 'while' and tag is 264
	Assign: (boolean) d = (boolean) true
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'd' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 27:         if((a == b or true) and q greater than a){
	Token: WORD: Lexeme is 'if' and tag is 263
	New environment instantiated.
	Token: TOKEN: tag is (
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is '==' and tag is 270
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: WORD: Lexeme is 'or' and tag is 258
	Token: WORD: Lexeme is 'true' and tag is 266
	Token: TOKEN: tag is )
	Token: WORD: Lexeme is 'and' and tag is 256
	Token: WORD: Lexeme is 'q' and tag is 286
	Token: TOKEN: tag is Đ
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 28:             float ab
	Token: TYPE: Lexeme is float tag is 292 Width is 8
	New environment instantiated.
	Token: WORD: Lexeme is 'ab' and tag is 286
	Identifier: ab	 TYPE: float

Lexer line 29:             ab := 3.4
	Token: WORD: Lexeme is 'ab' and tag is 286
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: REAL: value is 3.4 and tag is 269

Lexer line 30:             a is a - 1
	Token: WORD: Lexeme is 'a' and tag is 286
	Assign: (float) ab = (float) 3.4
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is -
	Token: NUM: value is 1 and tag is 268

Lexer line 31:         }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) TOKEN: tag is -

Lexer line 32:         else if (q less than a) {
	Token: WORD: Lexeme is 'else' and tag is 262
	Token: WORD: Lexeme is 'if' and tag is 263
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'q' and tag is 286
	Token: TOKEN: tag is Ē
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 33:             b := b + 1
	Token: WORD: Lexeme is 'b' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: TOKEN: tag is +
	Token: NUM: value is 1 and tag is 268

Lexer line 34:         }
	Token: TOKEN: tag is }
	Assign: (int) b = (int) TOKEN: tag is +

Lexer line 35:         else {
	Token: WORD: Lexeme is 'else' and tag is 262
	Token: TOKEN: tag is {

Lexer line 36:             d is false
	Token: WORD: Lexeme is 'd' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'false' and tag is 265

Lexer line 37:         }
	Token: TOKEN: tag is }
	Assign: (boolean) d = (boolean) false

Lexer line 38:         a is a + 1
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is +
	Token: NUM: value is 1 and tag is 268

Lexer line 39:     }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) TOKEN: tag is +

Lexer line 40:     b is 1
	Token: WORD: Lexeme is 'b' and tag is 286
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 1 and tag is 268

Lexer line 41:     a is a + 1
	Token: WORD: Lexeme is 'a' and tag is 286
	Assign: (int) b = (int) 1
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: TOKEN: tag is +
	Token: NUM: value is 1 and tag is 268

Lexer line 42: }
	Token: TOKEN: tag is }
	Assign: (int) a = (int) TOKEN: tag is +

Lexer line 43: do{
	Token: WORD: Lexeme is 'do' and tag is 260
	Token: TOKEN: tag is {

Lexer line 44:     int r
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	New environment instantiated.
	Token: WORD: Lexeme is 'r' and tag is 286
	Identifier: r	 TYPE: int

Lexer line 45:     a := 3
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: NUM: value is 3 and tag is 268

Lexer line 46:     r :=0
	Token: WORD: Lexeme is 'r' and tag is 286
	Assign: (int) a = (int) 3
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: NUM: value is 0 and tag is 268

Lexer line 47: }while(a == 3)
	Token: TOKEN: tag is }
	Assign: (int) r = (int) 0
	Token: WORD: Lexeme is 'while' and tag is 264
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'a' and tag is 286
	Token: WORD: Lexeme is '==' and tag is 270
	Token: NUM: value is 3 and tag is 268
	Token: TOKEN: tag is )

Lexer line 48: null
