Path: /Users/farrerz/Compiler-Design/src/test/E3_if_statement.nat
Evaluating: E3_if_statement.nat


Lexer line 1: boolean isOfAge
	Token: TYPE: Lexeme is boolean tag is 295 Width is 1
	New environment instantiated.
	Token: WORD: Lexeme is 'isOfAge' and tag is 286
	Identifier: isOfAge	 TYPE: boolean

Lexer line 2: boolean isRecentlyOfAge
	Token: TYPE: Lexeme is boolean tag is 295 Width is 1
	Token: WORD: Lexeme is 'isRecentlyOfAge' and tag is 286
	Identifier: isRecentlyOfAge	 TYPE: boolean

Lexer line 3: int age is 21
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Token: WORD: Lexeme is 'age' and tag is 286
	Identifier: age	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 21 and tag is 268

Lexer line 4: if(age equals 21){
	Token: WORD: Lexeme is 'if' and tag is 263
	Assign: (int) age = (int) 21
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'age' and tag is 286
	Token: WORD: Lexeme is 'equals' and tag is 270
	Token: NUM: value is 21 and tag is 268
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 5:     isOfAge is true
	Token: WORD: Lexeme is 'isOfAge' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'true' and tag is 266

Lexer line 6: }else{
	Token: TOKEN: tag is }
	Assign: (boolean) isOfAge = (boolean) true
	Token: WORD: Lexeme is 'else' and tag is 262
	Token: TOKEN: tag is {

Lexer line 7:     isOfAge := false
	Token: WORD: Lexeme is 'isOfAge' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is ':=' and tag is 285
	Token: WORD: Lexeme is 'false' and tag is 265

Lexer line 8: }
	Token: TOKEN: tag is }
	Assign: (boolean) isOfAge = (boolean) false

Lexer line 9: if(isOfAge and age less than 22){
	Token: WORD: Lexeme is 'if' and tag is 263
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'isOfAge' and tag is 286
	Token: WORD: Lexeme is 'and' and tag is 256
	Token: WORD: Lexeme is 'age' and tag is 286
	Token: TOKEN: tag is Ē
	Token: NUM: value is 22 and tag is 268
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 10:     isRecentlyOfAge is true
	Token: WORD: Lexeme is 'isRecentlyOfAge' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'true' and tag is 266

Lexer line 11: }
	Token: TOKEN: tag is }
	Assign: (boolean) isRecentlyOfAge = (boolean) true

Lexer line 12: int birthDay is 2
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Token: WORD: Lexeme is 'birthDay' and tag is 286
	Identifier: birthDay	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 2 and tag is 268

Lexer line 13: int birthMonth is 5
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) birthDay = (int) 2
	Token: WORD: Lexeme is 'birthMonth' and tag is 286
	Identifier: birthMonth	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 5 and tag is 268

Lexer line 14: int birthYear is 1995
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) birthMonth = (int) 5
	Token: WORD: Lexeme is 'birthYear' and tag is 286
	Identifier: birthYear	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 1995 and tag is 268

Lexer line 15: int currentDay is 7
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) birthYear = (int) 1995
	Token: WORD: Lexeme is 'currentDay' and tag is 286
	Identifier: currentDay	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 7 and tag is 268

Lexer line 16: int currentMonth is 7
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) currentDay = (int) 7
	Token: WORD: Lexeme is 'currentMonth' and tag is 286
	Identifier: currentMonth	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 7 and tag is 268

Lexer line 17: int currentYear is 2016
	Token: TYPE: Lexeme is int tag is 290 Width is 4
	Assign: (int) currentMonth = (int) 7
	Token: WORD: Lexeme is 'currentYear' and tag is 286
	Identifier: currentYear	 TYPE: int
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: NUM: value is 2016 and tag is 268

Lexer line 18: boolean isBirthDay
	Token: TYPE: Lexeme is boolean tag is 295 Width is 1
	Assign: (int) currentYear = (int) 2016
	Token: WORD: Lexeme is 'isBirthDay' and tag is 286
	Identifier: isBirthDay	 TYPE: boolean

Lexer line 19: #Check if it is the person's birthday
	Token: WORD: Lexeme is 'if' and tag is 263

Lexer line 20: if(birthMonth equals currentMonth and birthDay equals currentDay){
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'birthMonth' and tag is 286
	Token: WORD: Lexeme is 'equals' and tag is 270
	Token: WORD: Lexeme is 'currentMonth' and tag is 286
	Token: WORD: Lexeme is 'and' and tag is 256
	Token: WORD: Lexeme is 'birthDay' and tag is 286
	Token: WORD: Lexeme is 'equals' and tag is 270
	Token: WORD: Lexeme is 'currentDay' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is {

Lexer line 21:     isBirthDay is true
	Token: WORD: Lexeme is 'isBirthDay' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'true' and tag is 266

Lexer line 22: }else{
	Token: TOKEN: tag is }
	Assign: (boolean) isBirthDay = (boolean) true
	Token: WORD: Lexeme is 'else' and tag is 262
	Token: TOKEN: tag is {

Lexer line 23:     isBirthDay is false
	Token: WORD: Lexeme is 'isBirthDay' and tag is 286
	New environment instantiated.
	Token: WORD: Lexeme is 'is' and tag is 285
	Token: WORD: Lexeme is 'false' and tag is 265

Lexer line 24: }
	Token: TOKEN: tag is }
	Assign: (boolean) isBirthDay = (boolean) false

Lexer line 25: #Check is the person is of age to drink
	Token: WORD: Lexeme is 'if' and tag is 263

Lexer line 26: if(((currentYear - birthYear) greater than or 21)){
	Token: TOKEN: tag is (
	Token: TOKEN: tag is (
	Token: TOKEN: tag is (
	Token: WORD: Lexeme is 'currentYear' and tag is 286
	Token: TOKEN: tag is -
	Token: WORD: Lexeme is 'birthYear' and tag is 286
	Token: TOKEN: tag is )
	Token: TOKEN: tag is Đ
	Token: WORD: Lexeme is 'or' and tag is 258

ERROR IN FILE: E3_if_statement.nat:
java.lang.Error: near line 26: syntax error
